service: aws-scraper-cost-optimization

plugins:
  - serverless-bundle
  - serverless-iam-roles-per-function

provider:
  name: aws
  region: us-east-1
  profile: matheus-thiago-tcc
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  environment:
    SCRAPING_QUEUE_URL: !Ref ScrapingQueue
    SCRAPING_RESULT_BUCKET: !Ref ScrapingResultBucket
    CLUSTER_LOG_GROUP_NAME: !Ref ClusterLogGroup
    SECURITY_GROUP_NAME: !Ref ScraperSecurityGroup
    EC2_KEY_NAME: scraper-instance-key-pair  # key pair created at the AWS Console, because it's not supported by AWS Cloudformation

custom:
  bundle:
    linting: true # Enable linting as a part of the build process
    forceExclude:
      - aws-sdk # Because it has been already  provided by AWS Cloud environment
      - chrome-aws-lambda # Because it'll be provided through a Lambda Layer
    aliases: # Create an alias to 'import' modules easily with a custom path
      - Utils: src/utils
      - Helpers: src/helpers
      - Scrapers: src/scrapers
      - Functions: src/functions

functions:
  - ${file(sls/functions/startScraping.yml)}
  - ${file(sls/functions/startScrapingBatch.yml)}
  # Scripts
  - ${file(sls/functions/scripts/populateQueue.yml)}
  - ${file(sls/functions/scripts/consumeQueue.yml)}
  - ${file(sls/functions/scripts/createInstances.yml)}
  - ${file(sls/functions/scripts/terminateInstances.yml)}

resources:
  # S3
  - ${file(sls/resources/s3/scrapingResultBucket.yml)}
  # EC2
  - ${file(sls/resources/ec2/scraperSecurityGroup.yml)}
  - ${file(sls/resources/ec2/scraperInstance.yml)}
  # SQS
  - ${file(sls/resources/sqs/scrapingQueue.yml)}
  # CLOUDWATCH
  - ${file(sls/resources/cloudwatch/clusterLogGroup.yml)}
  # IMAGE BUILDER
  - ${file(sls/resources/imageBuilder/dependenciesComponents.yml)}
  - ${file(sls/resources/imageBuilder/amazonLinux2ForScraping.yml)}